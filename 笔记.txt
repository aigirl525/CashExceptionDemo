处理全局异常
android.app.Application和java.lang.Thread.UncaughtExceptionHandler。

Application：用来管理应用程序的全局状态。在应用程序启动时Application会首先创建，然后才会根据情况(Intent)来启动相应的Activity和Service。本示例中将在自定义加强版的Application中注册未捕获异常处理器。

Thread.UncaughtExceptionHandler：线程未捕获异常处理器，用来处理未捕获异常。如果程序出现了未捕获异常，默认会弹出系统中强制关闭对话框。我们需要实现此接口，并注册为程序中默认未捕获异常处理。这样当未捕获异常发生时，就可以做一些个性化的异常处理操作。



开源联网框架

AsyncHttpClient
https://github.com/AsyncHttpClient/async-http-client/

AsyncHttpClient发送GET请求
1，将下载好的源码拷贝到src目录下

2，创建一个AsyncHttpClient的对象

3，调用该类的get方法发送GET请求，传入请求资源地址URL，创建AsyncHttpResponseHandler对象

4，重写AsyncHttpResponseHandler下的两个方法，onSuccess和onFailure方法

AsyncHttpClient发送POST请求
1，将下载好的源码拷贝到src目录下

2，创建一个AsyncHttpClient的对象

3，创建请求参数，RequestParams对象

4，调用该类的post方法发POST，传入请求资源地址URL，请求参数RequestParams，创建AsyncHttpResponseHandler对象

5，重写AsyncHttpResponseHandler下的两个方法，onSuccess和onFailure方法

AsyncHttpClient上传文件
1，将下载好的源码拷贝到src目录下

2，创建一个AsyncHttpClient的对象

3，创建请求参数，RequestParams对象，请求参数仅仅包含文件对象即可，例如：

4，调用该类的post方法发POST，传入请求资源地址URL，请求参数RequestParams，创建AsyncHttpResponseHandler对象

5，重写AsyncHttpResponseHandler下的两个方法，onSuccess和onFailure方法afinal

判断网络连接状态
xutils

volley

OKHttp

